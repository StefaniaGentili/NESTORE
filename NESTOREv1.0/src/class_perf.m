function class_perf(T,class_file)
% Evaluates the performances of the features and of Nestore basing on the 
% classification files, automatically generated by the T vector. 
% Output: files of precision, recall, accuracy, informedness, 
% cm (confusion matrix)

% Input:
% T           = time intervals (letters)
% class_file  =  part of the name of the classification file

% Output: files of precision, recall, accuracy, informedness, 
% cm 

% calls the function file_perf_ti which calls class_perf_ti_fea

% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 3 of the License, or
% (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
% GNU General Public License for more details.

% S. Gentili, sgentili@ogs.it
% P. Brondi,  pbrondi@ogs.it
% License: GNUGPLv3
% last update: June 12, 2022

fprintf('\n\nThis is class_perf.m\n\n');

%generates output file names
pre=fullfile('../data/Testing_Output/',sprintf('pre_class_M2_stop_%s.dat', class_file));
re=fullfile('../data/Testing_Output/',sprintf('re_class_M2_stop_%s.dat', class_file));
acc=fullfile('../data/Testing_Output/',sprintf('acc_class_M2_stop_%s.dat', class_file));
inform=fullfile('../data/Testing_Output/',sprintf('inform_class_M2_stop_%s.dat', class_file));
cm=fullfile('../data/Testing_Output/',sprintf('cm_class_M2_stop_%s.dat', class_file));



%eliminates the files if already existing
if(exist(pre))
    delete(pre);
end
if(exist(re))
    delete(re);
end
if(exist(acc))
    delete(acc);
end
if(exist(inform))
    delete(inform);
end

if(exist(cm))
    delete(cm);
end

%for every time interval, generates class file name and calls file_perf_ev_class
for(i=1:length(T))
    filein=fullfile('../data/Testing_Output/',sprintf('class_%s_%s.dat',class_file,T{i}));
    fprintf('\nCalling class_perf_ti Ti=%s\n', T{i});
    class_perf_ti(filein,  pre, re, acc, inform,cm);
end
    
