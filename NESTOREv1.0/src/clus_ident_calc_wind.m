function [fSpace, fTime] = clus_ident_calc_wind(fMagnitude,form_space,form_time, ThM, Thwt,form_time2)% [fSpace, fTime] = clus_ident_calc_wind(3,'10.^(0.1238*fMagnitude+0.983)','10.^(0.5409*fMagnitude-0.547)',3.5,6.5,'10.^(0.032*fMagnitude+2.7389)');% -----------------------------------------------------------%% Function to calculate window lengths in space and time for% the windowing declustering technique%% INPUT variables: % fMagnitude : mainshock magnitude% form_space : equation of the space window% form_time  : equation of the time window% ThM        : threshold for minimum mainshock to be considered% Thwt       : threshold for different time window to be considered %              depending on magnitude; if the equation is magnitude%              independent set this threshold to a very small value (e.g.%              -20) and set form_time2=form_time% form_time2  : equation of the time window for M>=Thwt%% OUTPUT variables:% fSpace : Window length in space [km]% fTime  : Window length in time [dec. years]% This program is free software; you can redistribute it and/or modify% it under the terms of the GNU General Public License as published by% the Free Software Foundation; either version 3 of the License, or% (at your option) any later version.%% This program is distributed in the hope that it will be useful,% but WITHOUT ANY WARRANTY; without even the implied warranty of% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the% GNU General Public License for more details.% Author:% S. Gentili, sgentili@inogs.it% License: GNUGPLv3% Last change: October 14, 2021if(fMagnitude<ThM)    fSpace=0;    fTime=0;elseif(fMagnitude<Thwt)    fSpace =eval(form_space);    fTime = eval(form_time)/365;else    fSpace =eval(form_space);    fTime = eval(form_time2)/365;end